SQL (Structured Query Language) Injection is an attack on a web application database server that causes malicious queries to be executed. When a 
web application communicates with a database using input from a user that hasn't been properly validated, there runs the potential of an attacker 
being able to steal, delete or alter private and customer data and also attack the web applications authentication methods to private or customer areas.


-----


WHAT IS A DATABASE?

A database is a way of electronically storing collections of data in an organised manner. A database is controlled by a DBMS (Database Management System).
Types - Relational & Non-Relational Database


		       |- TABLE - users
		       |
	   |----- Shop-|- TABLE - products
	   |	       |
	   |	       |- TABLE - orders
	   |
	   |
	   |		 |- TABLE - users
	   |		 |
DB Server -|----- Staff -|- TABLE - information
	   |		 |
	   |		 |- TABLE - audit
	   |
	   |
	   |		    |- TABLE - customers
	   |		    |
	   |----- Accounts -|- TABLE - orders
			    |
			    |- TABLE - payroll



WHAT ARE TABLES?

A table is made up of columns and rows.

	1. Columns (Fields)-
	   Columns has a unique name per table. 

	Key Field : A key field has to be unique for every row of data which can be used to find that exact row in SQL queries.

	2. Rows (Records)-
	   Rows are what contains the individual lines of data. When you add data to the table, a new row/record is created, and when you 
	   delete data, a row/record is removed.

RELATIONAL DB-
Stores information in tables and often the tables have shared information between them.
They use columns to specify and define the data being stored and rows to actually store the data. 
The tables will often contain a column that has a unique ID (primary key) which will then be used in other tables to reference it and cause a 
relationship between the tables, hence the name Relational database.
Eg. MySQL, Microsoft SQL Server, Access, PostgreSQL and SQLite.

NON-RELATIONAL DB (NoSQL DB)-
NoSQL/Non-Relational DB is a sort of database that doesn't use tables, columns and rows to store the data, a specific database layout doesn't 
need to be constructed so each row of data can contain different information which can give more flexibility over a relational database. 
Eg. MongoDB, Cassandra and ElasticSearch.


-----


WHAT IS SQL?

SQL (Structured Query Language) is a feature-rich language used for querying databases, these SQL queries are better referred to as statements.

Syntaxes w.r.t. MySQL DB.

1. SELECT
   Used to retrieve data from the database. 
   > select * from users;
   > select username,password from users;

   > select * from users LIMIT 2;	#LIMITS the result to First 2 Rows.
   > select * from users LIMIT 3,2;	#SKIPS first 3 rows then prints next 2 Rows.
					#First no. specifies no. of results to SKIP
					#Second no. specifies no. of rsults to PRINT

2. WHERE clause
   Retrieves exact data we require by returning data that matches our specific clauses.
   > select * from users where username='admin';			#only return the rows where the username is equal to admin.
   > select * from users where username != 'admin';			#only return the rows where the username is NOT equal to admin.

   > select * from users where username='admin' or username='jon';	#only return the rows where the username is either equal to admin or jon. 


3. LIKE clause (Wildcard method)
   Specify data that isn't an exact match but instead either starts, contains or ends with certain characters by choosing where to place the 
   wildcard character (%).
   > select * from users where username like 'a%';			#returns any rows with username beginning with the letter a.
   > select * from users where username like '%n';			#This returns any rows with username ending with the letter n.
   > select * from users where username like '%mi%';			#Returns any rows with a username containing the characters 'mi' within them.

4. UNION
   Combines the results of two or more SELECT statements to retrieve data from either Single or Multiple tables.
   RULES - UNION statement must retrieve the same number of columns in each SELECT statement.
	 - Columns have to be of a similar data type and the column order has to be the same.
   > SELECT name,address,city,postcode from customers UNION SELECT company,address,city,postcode from suppliers;

5. INSERT
   Tells the database to insert a new row of data into the table.
   'into [table_name] (column 1, column 2)'  - tells DB which table to insert the data into.
   'values (value for col1, value for col2)' - 
   > insert into users (username,password) values ('bob','password123');

6. UPDATE
   Tells the database to update one or more rows of data within a table.
   > update users SET username='root',password='pass123' where username='admin';

7. DELETE
   Tells the database to delete one or more rows of data.
   > delete from users where username='martin';
   > delete from users;					#all the data in table users is deleted

























